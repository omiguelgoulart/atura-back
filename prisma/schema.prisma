// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Marca {
  id       Int       @id @default(autoincrement())
  nome     String    
  produtos Produto[]

  @@map("marca")
}

model Produto {
  id          Int           @id @default(autoincrement())
  nome        String        
  descricao   String        
  preco       Float
  categoria   String        
  estoque     Int
  tamanho    Int @default(0)
  marca       Marca         @relation(fields: [marca_id], references: [id])
  marca_id    Int
  foto        String
  fotos       Fotos[]
  itensPedido ItensPedido[]

  @@map("produto")
}

model Fotos {
  id         Int     @id @default(autoincrement())
  descricao  String  
  url        String
  produto    Produto @relation(fields: [produtoId], references: [id])
  produtoId  Int

  @@map("fotos")
}

model Clientes {
  id          Int       @id @default(autoincrement())
  nome        String    
  email       String    
  senha       String    
  clientescol String    
  pedidos     Pedidos[]

  @@map("clientes")
}

model Pedidos {
  id          Int           @id @default(autoincrement())
  data        DateTime
  status      String        
  total       Decimal       @db.Decimal(10, 2)
  cliente     Clientes      @relation(fields: [clientes_id], references: [id])
  clientes_id Int
  itensPedido ItensPedido[]

  @@map("pedidos")
}

model ItensPedido {
  id             Int     @id @default(autoincrement())
  quantidade     Int
  preco_unitario Decimal @db.Decimal(10, 2)
  pedido         Pedidos @relation(fields: [pedidos_id], references: [id])
  pedidos_id     Int
  produto        Produto @relation(fields: [produto_id], references: [id])
  produto_id     Int

  @@map("itens_pedido")
}

// model Carrinho {
//   idCarrinho     Int      @id @default(autoincrement())
//   Quantidade     Int
//   produto        Produto  @relation(fields: [Produto_idProduto], references: [idProduto])
//   Produto_idProduto Int
//   cliente        Clientes @relation(fields: [Clientes_idClientes], references: [idClientes])
//   Clientes_idClientes Int
// }
